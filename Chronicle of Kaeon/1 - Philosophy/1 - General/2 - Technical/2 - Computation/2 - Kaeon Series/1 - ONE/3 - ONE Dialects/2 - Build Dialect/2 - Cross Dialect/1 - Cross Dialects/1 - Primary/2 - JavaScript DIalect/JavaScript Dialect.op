JavaScript Dialect
	
	Philosophy
		
		-
			The JavaScript dialect is a cross dialect analogous to JavaScript and JSON.
		-
	
	Principles
	
		Notations
		
			JavaScript Mode
			
				-
					In the JavaScript dialect, a meta notation may have a child with the content
					"JavaScript Mode". Said child must have a child with either "JavaScript" or
					"JSON" as its content. If the mode is set to JSON, everything within cross
					compiled code generated by the contents of the notation's scope will be cut
					unless it is valid JSON. The mode is set to JavaScript by default.
				-
			
			List Type
			
				-
					In the JavaScript dialect, a meta notation may have a child with the content
					"List Type". Said child must have a child with either "List" or "Object" as its
					content. If the type is list, the lists within the notation's scope may have
					any contents and will be cross compiled as normal JavaScript lists. If the type
					is object, every child of list definitions within the notation's scope must
					have a single child that must either be a string, boolean, or number literal,
					or a list definition. List definitions declared when the type is object will be
					cross compiled to object literals. The type is list by default.
				-