GHI Format

	Philosophy

		-
			The GHI format is a set of JSON formats used to relay information between devices
			through the general hardware interface.
		-

	Principles

		Branch Data

			-
				Each type of device may have its own JSON format for describing its input and
				output states respectively.

				A format used to set the output of a device is referred to as a branch output
				format, and a format used to describe the input a device receives is called a
				branch input format.
			-

		Receptor Formats

			Receptor Output Format

				-
					The receptor output format is a JSON format used to make calls to receptor
					modules.

					The receptor output format shall consist of a JSON object which may have a
					field for each module in a given receptor module's module cluster, labelled
					according to the IDs of their respective modules.

					Each of said fields shall contain an object as its value in the branch data
					output format used by the module it is targeting, which shall set the output
					state of said module accordingly.
				-

			Receptor Input Format

				-
					The receptor input format is a JSON format used to specify the current state of
					the module cluster's receptor modules.

					The receptor input format shall consist of a JSON object which may have a field
					for each module in a given receptor module's module cluster, labelled according
					to the IDs of their respective modules.

					Each of said fields shall contain an object as its value.
					
					Said object may have a field with the alias "output", which, if present, shall
					contain a value in the branch data output format used by the module it is
					generated by, which shall specify the output state of said module.
					
					Said object may also have a field with the alias "input", which, if present,
					shall contain a value in the branch data input format used by the module it is
					generated by, which shall specify the input state of said module.

					Finally, said object shall have a field with the alias "type", which shall
					contain a string specifying the device type of the corresponding module.
				-